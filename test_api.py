#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ Executor Balancer
"""

import requests
import json

BASE_URL = "http://localhost:8006"

def test_endpoint(method, endpoint, data=None):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞"""
    url = f"{BASE_URL}{endpoint}"
    try:
        if method.upper() == "GET":
            response = requests.get(url)
        elif method.upper() == "POST":
            response = requests.post(url, json=data)
        
        print(f"‚úÖ {method} {endpoint} - {response.status_code}")
        if response.status_code != 200:
            print(f"   –û—à–∏–±–∫–∞: {response.text}")
        return response.status_code == 200
    except Exception as e:
        print(f"‚ùå {method} {endpoint} - –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ Executor Balancer")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
    endpoints = [
        ("GET", "/health"),
        ("GET", "/stats"),
        ("GET", "/executors"),
        ("GET", "/requests"),
        ("GET", "/api/stats"),
        ("GET", "/api/executors"),
        ("GET", "/api/requests"),
        ("GET", "/api/rules"),
        ("GET", "/api/dashboard"),
    ]
    
    success_count = 0
    total_count = len(endpoints)
    
    for method, endpoint in endpoints:
        if test_endpoint(method, endpoint):
            success_count += 1
    
    print("\n" + "=" * 50)
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã: {success_count}/{total_count} —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ —Ä–∞–±–æ—Ç–∞—é—Ç")
    
    if success_count == total_count:
        print("üéâ –í—Å–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
    else:
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã —Ç—Ä–µ–±—É—é—Ç –≤–Ω–∏–º–∞–Ω–∏—è")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º POST —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ POST —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤:")
    print("-" * 30)
    
    # –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π
    search_data = {
        "skills": ["Python", "FastAPI"],
        "status": "active",
        "available_only": True
    }
    test_endpoint("POST", "/api/executors/search", search_data)
    
    # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–∞–≤–∏–ª–∞
    rule_data = {
        "name": "Test Rule",
        "conditions": [],
        "priority": 1
    }
    test_endpoint("POST", "/api/rules", rule_data)

if __name__ == "__main__":
    main()
